app:
  telegram-token: ${TELEGRAM_API_KEY}
  scrapper-topic-name: link-update

kafka:
  consumer:
    bootstrap-server: ${KAFKA_LINK}
    groupId: link-tracker
    autoOffsetReset: latest
    maxPollIntervalMs: 300_000
    enableAutoCommit: false
    concurrency: 1
  producer:
    bootstrap-server: ${KAFKA_LINK}
    clientId: backend
    acksMode: all
    deliveryTimeout: 60s
    lingerMs: 1_000
    batchSize: 100_000
    maxInFlightPerConnection: 5
    enableIdempotence: true

retry:
  retry-type: exponential
  duration: 5
  attempts: 2
  codes: 500, 501, 502, 503, 504, 521, 522, 523, 524

bucket:
  capacity: 10
  refill:
    size: 20
    interval: 1
  cache:
    max-size: 100
    expiration-time: 10

client:
  base-url: ${SCRAPPER_CLIENT_BASE_URL}

spring:
  application:
    name: bot
  jackson:
    time-zone: UTC
server:
  port: 8090

logging:
  config: classpath:log4j2-plain.xml
springdoc:
  swagger-ui:
    path: /swagger-ui

management:
  metrics:
    tags:
      application: ${spring.application.name}
  server:
    port: 8091
  endpoint:
    health:
      enabled: true
    prometheus:
      enabled: true
    info:
      true
  endpoints:
    web:
      exposure:
        include:
          - health
          - prometheus
          - info
      base-path: /
      path-mapping:
        prometheus: /metrics


